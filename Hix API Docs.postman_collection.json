{
	"info": {
		"_postman_id": "2c7b82b2-0cfe-4480-807b-5bd5035a3b6d",
		"name": "HiCom API Docs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37597272",
		"_collection_link": "https://test11-6610.postman.co/workspace/test-Workspace~54f710c8-dcce-4acc-a61f-d999080bbff1/collection/37597272-2c7b82b2-0cfe-4480-807b-5bd5035a3b6d?action=share&source=collection_link&creator=37597272"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "Create New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"role\": \"SUPER_ADMIN\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "**Description**: Creates a new user with the provided details. The user information is required to successfully create the user record in the system.\n\n**Request Body**:\n\n- **`userName`** (string, required): The name of the user.\n    \n- **`email`** (string, format: email, required): The email address of the user.\n    \n- **`phoneNumber`** (string, required): The phone number of the user.\n    \n- **`role`** (string, required): The role assigned to the user. Must be one of `\"SUPER_ADMIN\"`, `\"ADMIN\"`, or `\"USER\"`.\n    \n- **`password`** (string, required): The password for the user account.\n    \n\nResponse:\n\n201 Created\n\nJson Response -{  \n\"userId\": 12345,  \n\"userName\": \"JohnDoe\",  \n\"email\": \"[john.doe@example.com](https://mailto:john.doe@example.com)\",  \n\"phoneNumber\": \"1234567890\",  \n\"createdBy\": 1,  \n\"updatedBy\": 1,  \n\"createdTime\": \"2024-01-01T12:00:00Z\",  \n\"updatedTime\": \"2024-01-01T12:00:00Z\",  \n\"role\": \"USER\",  \n\"status\": \"ACTIVE\"  \n}"
					},
					"response": [
						{
							"name": "User successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"role\": \"SUPER_ADMIN\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/user",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userId\": \"<long>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"role\": \"SUPER_ADMIN\",\n  \"status\": \"IN_ACTIVE\"\n}"
						},
						{
							"name": "Bad Request - Invalid input or missing required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"role\": \"SUPER_ADMIN\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update user details by userId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{userId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{userId}"
							]
						}
					},
					"response": [
						{
							"name": "User updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/user/:userId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userId\": \"<long>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"password\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"role\": \"SUPER_ADMIN\",\n  \"status\": \"ACTIVE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userName\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a user by userId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/{userId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{userId}"
							]
						},
						"description": "Deletes a user identified by their unique `userId`. A successful response indicates that the user was successfully deleted."
					},
					"response": [
						{
							"name": "User successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/user/:userId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch a user by userId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/{userId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{userId}"
							]
						},
						"description": "Retrieves detailed information about a user identified by their unique `userId`. This endpoint returns the user's full profile, including their status and other relevant details."
					},
					"response": [
						{
							"name": "User information retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/user/:userId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userId\": \"<long>\",\n  \"userName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"phoneNumber\": \"<string>\",\n  \"password\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"role\": \"USER\",\n  \"status\": \"IN_ACTIVE\"\n}"
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "The page number to retrieve. Used for pagination to manage large datasets."
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "The number of users to return per page. Used in conjunction with `pageNo` for pagination."
								}
							]
						},
						"description": "Retrieves a paginated list of all users in the system. This endpoint returns a collection of user profiles, including their IDs, names, email addresses, phone numbers, roles, and statuses. Pagination parameters `pageNo` and `pageSize` allow clients to control the amount of data returned in a single request."
					},
					"response": [
						{
							"name": "List of users retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/users?pageNo=<integer>&pageSize=<integer>",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"users"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve. Used for pagination to manage large datasets."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of users to return per page. Used in conjunction with `pageNo` for pagination."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"userId\": \"<long>\",\n      \"userName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"phoneNumber\": \"<string>\",\n      \"password\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"role\": \"ADMIN\",\n      \"status\": \"IN_ACTIVE\"\n    },\n    {\n      \"userId\": \"<long>\",\n      \"userName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"phoneNumber\": \"<string>\",\n      \"password\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"role\": \"ADMIN\",\n      \"status\": \"ACTIVE\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalPages\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "User Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						},
						"description": "Allows users to log in to the system by providing their email/phone number, and password. On successful authentication, a token is returned to be used for subsequent requests."
					},
					"response": [
						{
							"name": "Successful login returns a token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/authenticate",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request, typically when credentials are invalid or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized, indicating incorrect email or password.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authenticate"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "site",
			"item": [
				{
					"name": "Fetch all sites with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/site?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"site"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "(Required) The page number to retrieve, starting from 0."
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "(Required) The number of items per page."
								}
							]
						},
						"description": "Retrieves a paginated list of sites. You can specify the page number and page size to control the pagination."
					},
					"response": [
						{
							"name": "Successfully retrieved the list of sites with pagination information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/site?pageNo=<integer>&pageSize=<integer>",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"site"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "(Required) The page number to retrieve, starting from 0."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) The number of items per page."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"siteId\": \"<string>\",\n      \"siteName\": \"<string>\",\n      \"region\": \"<string>\"\n    },\n    {\n      \"siteId\": \"<string>\",\n      \"siteName\": \"<string>\",\n      \"region\": \"<string>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request. The request parameters are invalid or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "(Required) The page number to retrieve, starting from 0."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) The number of items per page."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "(Required) The page number to retrieve, starting from 0."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) The number of items per page."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a site by siteId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/site/{siteId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"site",
								"{siteId}"
							]
						},
						"description": "Retrieves the details of a site identified by the given ID."
					},
					"response": [
						{
							"name": "Successfully retrieved the site details. This response includes the site information for the specified ID.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/site/:siteId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"siteId\": \"<string>\",\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}"
						},
						{
							"name": "Site not found. The site with the specified ID does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId",
											"value": ""
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId",
											"value": ""
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a site by siteId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/site/{siteId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"site",
								"{siteId}"
							]
						},
						"description": "Deletes a site identified by the given ID. Upon successful deletion, a confirmation response is returned."
					},
					"response": [
						{
							"name": "Successfully deleted the site. This response confirms that the site with the given ID has been removed.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/site/:siteId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Site not found. The site with the specified ID does not exist.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a site by siteId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/site/{siteId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"site",
								"{siteId}"
							]
						},
						"description": "Updates the details of an existing site identified by the given ID."
					},
					"response": [
						{
							"name": "Successfully updated the site. This response includes the updated details of the site.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/site/:siteId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"siteId\": \"<string>\",\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}"
						},
						{
							"name": "Bad request. The request body is invalid or missing required fields.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Site not found. The site with the specified ID does not exist.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/site/:siteId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site",
										":siteId"
									],
									"variable": [
										{
											"key": "siteId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new site",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/site",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"site"
							]
						},
						"description": "Creates a new site with the provided name and region."
					},
					"response": [
						{
							"name": "Successfully created the site. This response includes the details of the newly created site.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/site",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"site"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"siteId\": \"<string>\",\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}"
						},
						{
							"name": "Bad request. The request body is invalid or missing required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/site",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"siteName\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/site",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"site"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "solution",
			"item": [
				{
					"name": "Fetch all solutions with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/solution?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solution"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "The page number to retrieve, starting from 1."
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "The number of items per page."
								}
							]
						},
						"description": "Retrieves a paginated list of solutions. You can specify the page number and page size to control the pagination."
					},
					"response": [
						{
							"name": "Successfully retrieved the list of solutions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/solution?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve, starting from 1."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of items per page."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"solutionId\": \"<string>\",\n      \"solutionName\": \"<string>\",\n      \"skillId\": \"<string>\",\n      \"contents\": [\n        \"Images\",\n        \"Videos\"\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"solutionDescription\": \"<string>\"\n    },\n    {\n      \"solutionId\": \"<string>\",\n      \"solutionName\": \"<string>\",\n      \"skillId\": \"<string>\",\n      \"contents\": [\n        \"Images\",\n        \"Images\"\n      ],\n      \"createdBy\": \"<string>\",\n      \"updatedBy\": \"<string>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"solutionDescription\": \"<string>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/solution?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve, starting from 1."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of items per page."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a solution by solutionId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/solution/{solutionId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solution",
								"{solutionId}"
							]
						},
						"description": "Retrieves the details of a solution identified by the given ID."
					},
					"response": [
						{
							"name": "Successfully retrieved the solution. This response includes all the details of the solution identified by the given ID.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"solutionId\": \"<string>\",\n  \"solutionName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Images\",\n    \"Videos\"\n  ],\n  \"createdBy\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"solutionDescription\": \"<string>\"\n}"
						},
						{
							"name": "Solution not found. The solution with the specified ID does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a solution by solutionId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/solution/{solutionId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solution",
								"{solutionId}"
							]
						},
						"description": "Deletes a solution identified by the given ID. On success, it confirms that the solution has been deleted."
					},
					"response": [
						{
							"name": "Successfully deleted the solution. This response confirms that the solution with the given ID has been removed.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Solution not found. The solution with the specified ID does not exist.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a solution by solutionId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/solution/{solutionId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solution",
								"{solutionId}"
							]
						},
						"description": "The API is hosted at `https://hix.com/v1`\n\n#### Endpoint: `PUT /solution/{solutionId}`\n\n**Summary:** Update an existing solution by its solutionId.\n\n**Description:** This API endpoint allows clients to update the details of an existing solution specified by its unique `solutionId`. The endpoint enables modification of various attributes of the solution, including its name, description, associated skill ID, and the types of contents.\n\n**Path Parameter:**\n\n- **solutionId** (required):\n    \n    - **In:** Path\n        \n    - **Description:** The unique identifier of the solution to be updated.\n        \n    - **Schema:**\n        \n        - **Type:** `string`\n            \n\n**Request Headers:**\n\n- **Content-Type:** `application/json`\n    \n\n**Request Body:**\n\n- **Description:** The request payload for updating the solution.\n    \n- **Required:** Yes\n    \n- **Schema:**\n    \n    - **Type:** `object`\n        \n    - **Properties:**\n        \n        - **solutionName:**\n            \n            - **Type:** `string`\n                \n            - **Description:** The updated name of the solution.\n                \n        - **solutionDescription:**\n            \n            - **Type:** `string`\n                \n            - **Description:** The updated description of the solution.\n                \n        - **skillId:**\n            \n            - **Type:** `string`\n                \n            - **Description:** The updated skill ID associated with the solution.\n                \n        - **contents:**\n            \n            - **Type:** `array`\n                \n            - **Items:**\n                \n                - **Type:** `string`\n                    \n                - **Enum:** `\"Videos\"`, `\"Pdf\"`, `\"Images\"`\n                    \n            - **Description:** The types of content associated with the solution.\n                \n    - **Required:**\n        \n        - **skillId**\n            \n        - **contents**"
					},
					"response": [
						{
							"name": "Successfully updated the solution",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"solutionId\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"createdBy\": \"<string>\",\n  \"updatedBy\": \"<string>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}"
						},
						{
							"name": "Bad request, invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Solution not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillId\": \"<string>\",\n  \"contents\": [\n    \"Pdf\",\n    \"Images\"\n  ],\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution/:solutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution",
										":solutionId"
									],
									"variable": [
										{
											"key": "solutionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a new solution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": \"Images\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/solution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"solution"
							]
						},
						"description": "The API is hosted at `https://hix.com/v1`\n\n#### Endpoint: `POST /solution`\n\n**Summary:** This API endpoint allows clients to create a new solution within the system.\n\n**Request Description:**\n\n- **Path:** `/solution`\n    \n- **Method:** `POST`\n    \n- **Content-Type:** `application/json`\n    \n\nStartFragment\n\n**Request Body Parameters:**\n\n- **solutionName**: A string representing the name of the solution. _(Required)_\n    \n    - Example: `\"Introduction to JavaScript\"`\n        \n- **solutionDescription**: A string providing a detailed description of the solution. _(Required)_\n    \n    - Example: `\"A comprehensive guide to learning JavaScript.\"`\n        \n- **skillId**: A string representing the ID of the skill associated with the solution. _(Required)_\n    \n    - Example: `\"SKILL002\"`\n        \n- **contents**: A string indicating the type of content associated with the solution. Must be one of `\"Videos\"`, `\"Pdf\"`, or `\"Images\"`. _(Required)_\n    \n\nDescription:\n\nStartFragmentThe `POST /solution` endpoint is designed to create a new solution by providing necessary details such as name, description, associated skill ID, and content type. Successful creation returns the full details of the new solution, while errors are communicated with appropriate status codes and messages for invalid requests or server issues."
					},
					"response": [
						{
							"name": "Solution created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": \"Images\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"solutionId\": \"<integer>\",\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": \"Videos\",\n  \"createdBy\": \"<integer>\",\n  \"updatedBy\": \"<integer>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": \"Images\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"solutionName\": \"<string>\",\n  \"solutionDescription\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"contents\": \"Images\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/solution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"solution"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "ticket",
			"item": [
				{
					"name": "Create a new ticket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ticket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket"
							]
						},
						"description": "The Host of the API is [https://hix.com](https://hix.com)\n\n**Endpoint:** `POST /v1/ticket`\n\nStartFragment\n\n#### Request\n\n- **Content-Type:** `application/json`\n    \n\nRequest Body\n\n{  \n\"ticketName\": \"string\",  \n\"ticketDescription\": \"string\",  \n\"source\": \"EMAIL\" | \"PHONE_CALL\",  \n\"skillIds\": \\[\"string\"\\],  \n\"remarks\": \"string\",  \n\"contents\": \"Videos\" | \"Pdf\" | \"Images\",  \n\"region\": \"string\"  \n}\n\nStartFragment\n\n**Parameters:**\n\n- `ticketName` (string, required): The name of the ticket. Example: `\"System Outage\"`\n    \n- `ticketDescription` (string, required): A detailed description of the ticket. Example: `\"The system experienced an unexpected outage affecting all users.\"`\n    \n- `source` (string, required): The source from which the ticket was created. Must be either `EMAIL` or `PHONE_CALL`. Example: `\"EMAIL\"`\n    \n- `skillIds` (array of strings, required): List of skill IDs associated with the ticket. Example: `[\"SKILL001\", \"SKILL002\"]`\n    \n- `remarks` (string, optional): Additional comments or remarks about the ticket. Example: `\"Urgent attention required.\"`\n    \n- `contents` (string, required): Type of content associated with the ticket. Can be `Videos`, `Pdf`, or `Images`. Example: `\"Videos\"`\n    \n- `region` (string, optional): The region related to the ticket. Example: `\"North America\".`\n    \n\n**Description:**  \nThe `Create Ticket` API allows users to create a new ticket within the system. This endpoint is designed to handle the creation of tickets which may represent issues, requests, or tasks that need attention. The ticket includes details such as its name, description, source, priority, and the skills associated with it. Upon successful creation, the API returns detailed information about the newly created ticket.\n\nEndFragment"
					},
					"response": [
						{
							"name": "Ticket created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ticketId\": \"<integer>\",\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"EMAIL\",\n  \"createdBy\": \"<integer>\",\n  \"updatedBy\": \"<integer>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"contents\": \"Pdf\",\n  \"priority\": \"LOW\",\n  \"status\": \"CLOSED\",\n  \"assigneeId\": \"<integer>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"region\": \"<string>\",\n  \"remarks\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request - Invalid input data",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error - Unexpected error occurred",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a ticket by ticketId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ticket/{ticketId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket",
								"{ticketId}"
							]
						},
						"description": "The Host of the API is [https://hix.com](https://hix.com)\n\n**Endpoint:** `POST /v1/ticket/{ticketId}`\n\n**Description:**  \nThe `Update Ticket By Id` API allows you to update the details of an existing ticket identified by its `ticketId`. This operation is useful for modifying ticket attributes such as its name, description, source, and associated skills. It supports updating multiple fields simultaneously and reflects the changes in the ticket's information.\n\n#### Request\n\n- **Content-Type:** `application/json`\n    \n- Request Body -\n    \n\n{  \n\"ticketName\": \"string\",  \n\"ticketDescription\": \"string\",  \n\"source\": \"EMAIL\" | \"PHONE_CALL\",  \n\"skillIds\": \\[\"string\"\\],  \n\"remarks\": \"string\",  \n\"contents\": \"Videos\" | \"Pdf\" | \"Images\",  \n\"region\": \"string\"  \n}\n\n- **Parameters:**\n    \n    - `ticketId` (integer, required): The unique identifier of the ticket you wish to update.\n        \n    - `ticketName` (string, optional): The new name for the ticket. This field helps in identifying the ticket.\n        \n    - `ticketDescription` (string, optional): A description of the ticket, providing additional context or details.\n        \n    - `source` (string, optional): The source of the ticket, which could be `EMAIL` or `PHONE_CALL`, indicating how the ticket was created.\n        \n    - `skillIds` (array of strings, optional): A list of skill IDs that are relevant to the ticket. This allows associating the ticket with specific skills.\n        \n    - `remarks` (string, optional): Any additional comments or notes about the ticket.\n        \n    - `contents` (string, optional): The type of content associated with the ticket, such as `Videos`, `Pdf`, or `Images`.\n        \n    - `region` (string, optional): The geographical region related to the ticket, providing contextual location information."
					},
					"response": [
						{
							"name": "Successfully updated the ticket",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ticketId\": \"<integer>\",\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"EMAIL\",\n  \"createdBy\": \"<integer>\",\n  \"updatedBy\": \"<integer>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"contents\": \"Images\",\n  \"priority\": \"MEDIUM\",\n  \"status\": \"RE_OPEN\",\n  \"assigneeId\": \"<integer>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"region\": \"<string>\",\n  \"remarks\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request - The request data is invalid or incomplete",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - The ticket with the specified ID does not exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": ""
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - An unexpected error occurred on the server",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"PHONE_CALL\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contents\": \"Videos\",\n  \"remarks\": \"<string>\",\n  \"region\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId",
											"value": ""
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a ticket by ticketId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ticket/{ticketId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket",
								"{ticketId}"
							]
						},
						"description": "The Host of the API is [https://hix.com](https://hix.com)\n\n**Endpoint:** `GET /v1/ticket/{ticketId}`\n\n**Description:**  \nThe `Fetch Ticket By Id` API allows you to retrieve the details of a specific ticket by its unique identifier (`ticketId`). This operation provides complete information about the ticket, including its name, description, source, and associated details such as priority, status, and related skills. It is useful for obtaining comprehensive information about a ticket for review or further action.\n\n#### Request\n\n- **Path Parameter:**\n    \n    - `ticketId`\n        \n- Content-type: application/json\n    \n- body - {  \n    \"ticketId\": 1,  \n    \"ticketName\": \"System Outage\",  \n    \"ticketDescription\": \"System outage reported affecting all users.\",  \n    \"source\": \"EMAIL\",  \n    \"createdBy\": 1,  \n    \"updatedBy\": 2,  \n    \"createdTime\": \"2024-08-10T14:48:00.000Z\",  \n    \"updatedTime\": \"2024-08-10T15:00:00.000Z\",  \n    \"remarks\": \"Urgent\",  \n    \"contents\": \"Images\",  \n    \"priority\": \"HIGH\",  \n    \"status\": \"IN_PROGRESS\",  \n    \"assigneeId\": 1,  \n    \"skillIds\": \\[\"SKILL001\", \"SKILL002\"\\],  \n    \"region\": \"North America\"  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the ticket details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ticketId\": \"<integer>\",\n  \"ticketName\": \"<string>\",\n  \"ticketDescription\": \"<string>\",\n  \"source\": \"EMAIL\",\n  \"createdBy\": \"<integer>\",\n  \"updatedBy\": \"<integer>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"remarks\": \"<string>\",\n  \"contents\": \"Images\",\n  \"priority\": \"HIGH\",\n  \"status\": \"OPEN\",\n  \"assigneeId\": \"<integer>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"region\": \"<string>\"\n}"
						},
						{
							"name": "Ticket not found. The specified `ticketId` does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch all tickets with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tickets?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tickets"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "The page number to retrieve."
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "The number of tickets per page."
								}
							]
						},
						"description": "The Host of the API is [https://hix.com](https://hix.com)\n\n**Endpoint:** `GET /v1/tickets`\n\n**Description:**  \nThe `Fetch All Tickets` API allows you to retrieve a paginated list of all tickets in the system. This endpoint supports pagination, enabling you to specify the page number and the number of tickets per page, facilitating efficient retrieval of large datasets.\n\n#### Query Parameters\n\n- **`pageNo`** (integer, required): The page number to retrieve. For example, `0` for the first page.\n    \n- **`pageSize`** (integer, required): The number of tickets to retrieve per page. For example, `50` for fifty tickets per page.\n    \n\nRespnse - 200 OK\n\n{  \n\"data\": \\[  \n{  \n\"ticketId\": 1,  \n\"ticketName\": \"System Outage\",  \n\"ticketDescription\": \"System outage reported affecting all users.\",  \n\"source\": \"EMAIL\",  \n\"createdBy\": 1,  \n\"updatedBy\": 2,  \n\"createdTime\": \"2024-08-10T14:48:00.000Z\",  \n\"updatedTime\": \"2024-08-10T15:00:00.000Z\",  \n\"remarks\": \"Urgent\",  \n\"contents\": \"Images\",  \n\"priority\": \"HIGH\",  \n\"status\": \"IN_PROGRESS\",  \n\"assigneeId\": 1,  \n\"skillIds\": \\[\"SKILL001\", \"SKILL002\"\\],  \n\"region\": \"North America\"  \n}  \n\\],  \n\"pageNo\": 0,  \n\"pageSize\": 50,  \n\"total\": 10  \n}"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of tickets.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tickets?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of tickets per page."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"ticketId\": \"<integer>\",\n      \"ticketName\": \"<string>\",\n      \"ticketDescription\": \"<string>\",\n      \"source\": \"PHONE_CALL\",\n      \"createdBy\": \"<integer>\",\n      \"updatedBy\": \"<integer>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"remarks\": \"<string>\",\n      \"contents\": \"Images\",\n      \"priority\": \"HIGH\",\n      \"status\": \"CLOSED\",\n      \"assigneeId\": \"<integer>\",\n      \"skillIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"region\": \"<string>\"\n    },\n    {\n      \"ticketId\": \"<integer>\",\n      \"ticketName\": \"<string>\",\n      \"ticketDescription\": \"<string>\",\n      \"source\": \"PHONE_CALL\",\n      \"createdBy\": \"<integer>\",\n      \"updatedBy\": \"<integer>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"remarks\": \"<string>\",\n      \"contents\": \"Images\",\n      \"priority\": \"MEDIUM\",\n      \"status\": \"RE_OPEN\",\n      \"assigneeId\": \"<integer>\",\n      \"skillIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"region\": \"<string>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						},
						{
							"name": "Bad request, invalid query parameters.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tickets?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of tickets per page."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tickets?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tickets"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "The page number to retrieve."
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "The number of tickets per page."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a ticket by ticketId",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ticket/{ticketId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ticket",
								"{ticketId}"
							]
						},
						"description": "The Host of the API is https://hix.com\n\n**Endpoint:** `DELETE /v1/ticket/{ticketId}`\n\n**Description:**  \nThe `Delete Ticket By ID` API allows you to delete a specific ticket from the system using its unique ID. This operation is irreversible and will remove the ticket permanently from the system.\n\n#### Path Parameters\n\n- **`ticketId`**\n    \n\nContent-Type - application/json"
					},
					"response": [
						{
							"name": "Ticket successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Ticket not found. The specified ticket ID does not exist.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ticket/:ticketId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ticket",
										":ticketId"
									],
									"variable": [
										{
											"key": "ticketId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "group",
			"item": [
				{
					"name": "Create a new group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group"
							]
						},
						"description": "The Host of API is - https://hix.com\n\n**Endpoint:** `POST /v1/group`\n\n**Description:**  \nThe `Create Group` API allows you to create a new group in the system. This operation requires specifying the group’s name, description, associated skill, agents, and content type.\n\n**Request Body:**\n\n- **`groupName`** (string, required): The name of the group. For example, `\"Support Team\"`.\n    \n- **`groupDescription`** (string, optional): A brief description of the group. For example, `\"A group responsible for handling customer support.\"`.\n    \n- **`skillId`** (string, required): The skill ID associated with the group. For example, `\"SKILL002\"`.\n    \n- **`agentIds`** (array of integers, required): A list of agent IDs associated with the group. For example, `[1, 2]`.\n    \n- **`contents`** (string, required): The type of content associated with the group. Allowed values are `\"Videos\"`, `\"Pdf\"`, or `\"Images\"`. For example, `\"Videos\"`.\n    \n\nResponse - 201 CREATED\n\n{  \n\"groupId\": 1,  \n\"groupName\": \"Support Team\",  \n\"groupDescription\": \"A group responsible for handling customer support.\",  \n\"skillId\": \"SKILL002\",  \n\"createdBy\": 1,  \n\"updatedBy\": 2,  \n\"createdTime\": \"2024-08-10T14:48:00.000Z\",  \n\"updatedTime\": \"2024-08-10T15:00:00.000Z\",  \n\"agentIds\": \\[1, 2\\],  \n\"contents\": \"Videos\"  \n}"
					},
					"response": [
						{
							"name": "Group created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"groupId\": \"<integer>\",\n  \"groupName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"createdBy\": \"<integer>\",\n  \"updatedBy\": \"<integer>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"agentIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"contents\": \"Images\",\n  \"groupDescription\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request. The request data is invalid or missing required fields.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error. An unexpected error occurred while processing the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupName\": \"<string>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Group By groupId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupName\": \"<string>\",\n  \"groupDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/group/{groupId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group",
								"{groupId}"
							]
						},
						"description": "The Host of API is - https://hix.com\n\n- **Endpoint**: `PUT /v1/group/{groupId}`\n    \n- **Description**: This endpoint updates the details of an existing group specified by its unique `groupId`. It allows you to modify various attributes of the group, including its name, description, associated skill, agents, and content type.\n    \n- **Path Parameter**:\n    \n    - `groupId` (required, integer): The unique identifier of the group that you want to update.\n        \n- **Request Body**:\n    \n    - `groupName` (string): The new name for the group. (Optional)\n        \n    - `groupDescription` (string): A new description for the group. (Optional)\n        \n    - `skillId` (string): The identifier for the skill associated with the group. (Required)\n        \n    - `agentIds` (array of integers): A list of agent IDs to associate with the group. (Required)\n        \n    - `contents` (string): The type of content related to the group, which can be \"Videos\", \"Pdf\", or \"Images\". (Required).\n        \n    - {  \n        \"groupName\": \"Updated Group Name\",  \n        \"groupDescription\": \"Updated description of the group.\",  \n        \"skillId\": \"SKILL002\",  \n        \"agentIds\": \\[1, 2\\],  \n        \"contents\": \"Videos\"  \n        }\n        \n\nContent-type - application/json\n\n**Responses**: 200 OK\n\n{  \n\"groupId\": 123,  \n\"groupName\": \"Updated Group Name\",  \n\"groupDescription\": \"Updated description of the group.\",  \n\"skillId\": \"SKILL002\",  \n\"createdBy\": 1,  \n\"updatedBy\": 2,  \n\"createdTime\": \"2024-08-12T10:00:00Z\",  \n\"updatedTime\": \"2024-08-12T15:00:00Z\",  \n\"agentIds\": \\[1, 2\\],  \n\"contents\": \"Videos\"  \n}"
					},
					"response": [
						{
							"name": "Group successfully updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupName\": \"<string>\",\n  \"groupDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/group/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"group",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"groupId\": \"<long>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"contents\": \"Images\",\n  \"groupName\": \"<string>\",\n  \"groupDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Groups with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group"
							]
						},
						"description": "The Host of API is - https://hix.com\n\n**Endpoint**: `GET /group`\n\nDescription:This API endpoint retrieves a paginated list of all groups in the system. Each group includes comprehensive details such as its unique identifier, name, description, associated skill ID, creation and update timestamps, the IDs of associated agents, and the type of content related to the group. This endpoint supports pagination to handle large datasets efficiently.\n\n**Request**\n\n- **Method**: GET\n    \n- **URL**: `https://hix.com/v1/group`\n    \n\nResponse:\n\n**200 OK**: The request was successful, and the response contains the paginated list of groups.\n\n- **Content-Type**: `application/json`\n    \n\n{  \n\"data\": \\[  \n{  \n\"groupId\": 1,  \n\"groupName\": \"Training Group A\",  \n\"groupDescription\": \"Group for training A\",  \n\"skillId\": \"SKILL001\",  \n\"createdBy\": 101,  \n\"updatedBy\": 102,  \n\"createdTime\": \"2024-08-01T12:00:00Z\",  \n\"updatedTime\": \"2024-08-05T12:00:00Z\",  \n\"agentIds\": \\[1, 2\\],  \n\"contents\": \"Videos\"  \n},  \n{  \n\"groupId\": 2,  \n\"groupName\": \"Training Group B\",  \n\"groupDescription\": \"Group for training B\",  \n\"skillId\": \"SKILL002\",  \n\"createdBy\": 103,  \n\"updatedBy\": 104,  \n\"createdTime\": \"2024-07-20T12:00:00Z\",  \n\"updatedTime\": \"2024-08-01T12:00:00Z\",  \n\"agentIds\": \\[3, 4\\],  \n\"contents\": \"Pdf\"  \n}  \n\\],  \n\"pageNo\": 0,  \n\"pageSize\": 50,  \n\"total\": 10  \n}"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of groups.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"groupId\": \"<long>\",\n      \"skillId\": \"<string>\",\n      \"agentIds\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"contents\": \"Videos\",\n      \"groupName\": \"<string>\",\n      \"groupDescription\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\"\n    },\n    {\n      \"groupId\": \"<long>\",\n      \"skillId\": \"<string>\",\n      \"agentIds\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"contents\": \"Images\",\n      \"groupName\": \"<string>\",\n      \"groupDescription\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Fetch Group By groupId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group/{groupId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group",
								"{groupId}"
							]
						},
						"description": "**The Host Of API - https://hix.com**\n\n**Endpoint**: `GET /v1/group/{groupId}`\n\n**Description**: This endpoint retrieves the details of a specific group based on its unique identifier (`groupId`). The response provides comprehensive information about the group, including its name, description, associated skill, timestamps, and the type of content related to the group.\n\n**Path Parameters**\n\n- **Responses**\n    \n    - **200 OK**: The request was successful, and the details of the group are returned.\n        \n    - The response body includes:\n        \n    - {  \n        \"groupId\": 1,  \n        \"groupName\": \"Training Group A\",  \n        \"groupDescription\": \"Group for training A\",  \n        \"skillId\": \"SKILL001\",  \n        \"createdBy\": 101,  \n        \"updatedBy\": 102,  \n        \"createdTime\": \"2024-08-01T12:00:00Z\",  \n        \"updatedTime\": \"2024-08-05T12:00:00Z\",  \n        \"agentIds\": \\[1, 2\\],  \n        \"contents\": \"Videos\"  \n        }"
					},
					"response": [
						{
							"name": "Successfully retrieved the details of the group.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"groupId\": \"<long>\",\n  \"skillId\": \"<string>\",\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"contents\": \"Videos\",\n  \"groupName\": \"<string>\",\n  \"groupDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						},
						{
							"name": "Group not found. The specified group ID does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Group By groupId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/group/{groupId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"group",
								"{groupId}"
							]
						},
						"description": "**Endpoint**: `DELETE /v1/group/{groupId}`**  \nDescription**: This endpoint allows you to delete a specific group identified by its unique `groupId`. Once a group is deleted, the action is irreversible, and the group will be permanently removed from the system.\n\n**Path Parameters**\n\n- **`groupId`**\n    \n\n**Responses**\n\n- **200 OK**"
					},
					"response": [
						{
							"name": "Successfully deleted the group.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/group/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Group not found. The specified group ID does not exist.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/group/:groupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"group",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cannedResponse",
			"item": [
				{
					"name": "Create Canned Response",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"htmlPage\": \"<string>\",\n  \"contents\": \"Pdf\",\n  \"visibility\": \"ALL\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cannedResponse",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cannedResponse"
							]
						},
						"description": "**The Host of API is - htpps://hix.com  \nEndpoint**: `POST /v1/cannedResponse`  \nDescription**: This endpoint creates a new canned response with the specified details. The canned response includes a title, description, HTML content, content type, visibility settings, and associations with groups or agents.\n\nRequest json -\n\n{  \n\"title\": \"Welcome Message\",  \n\"description\": \"A canned response for welcoming new users.\",  \n\"htmlPage\": \"\n\n<h1>Welcome!</h1>\n\n<p>Thank you for joining us.</p>\n\n\",  \n\"contents\": \"Pdf\",  \n\"visibility\": \"AGENTS\",  \n\"groupIds\": \\[101, 102\\],  \n\"agentIds\": \\[201, 202\\]  \n}\n\n**Responses**\n\n- **201 Created**: The canned response was successfully created. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the newly created canned response.\n        \n    - **`title`** (string): The title of the canned response.\n        \n    - **`description`** (string): A brief description of the canned response.\n        \n    - **`htmlPage`** (string): The HTML content or URL for the canned response.\n        \n    - **`contents`** (string): The type of content related to the canned response.\n        \n    - **`createdBy`** (integer, int64): The ID of the user who created the canned response.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the canned response.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the canned response was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the canned response was last updated.\n        \n    - **`status`** (string): The status of the canned response. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - **`visibility`** (string): The visibility setting for the canned response.\n        \n    - **`groupIds`** (array of integers, optional): A list of group IDs associated with the canned response.\n        \n    - **`agentIds`** (array of integers, optional): A list of agent IDs associated with the canned response.\n        \n    - Json format - {  \n        \"id\": 1,  \n        \"title\": \"Welcome Message\",  \n        \"description\": \"A canned response for welcoming new users.\",  \n        \"htmlPage\": \"Welcome!Thank you for joining us.\",  \n        \"contents\": \"Pdf\",  \n        \"createdBy\": 1001,  \n        \"updatedBy\": 1002,  \n        \"createdTime\": \"2024-08-12T08:30:00Z\",  \n        \"updatedTime\": \"2024-08-12T09:00:00Z\",  \n        \"status\": \"ACTIVE\",  \n        \"visibility\": \"AGENTS\",  \n        \"groupIds\": \\[101, 102\\],  \n        \"agentIds\": \\[201, 202\\]  \n        }"
					},
					"response": [
						{
							"name": "Successfully created the canned response.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"htmlPage\": \"<string>\",\n  \"contents\": \"Pdf\",\n  \"visibility\": \"ALL\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cannedResponse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cannedResponse"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"contents\": \"Images\",\n  \"htmlPage\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"visibility\": \"ALL\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update Canned Response By Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"htmlPage\": \"<string>\",\n  \"contents\": \"Videos\",\n  \"visibility\": \"AGENTS\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cannedResponse/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cannedResponse",
								"{id}"
							]
						},
						"description": "**The Host of API is - htpps://hix.com****Endpoint**: `PUT /v1/cannedResponse/{id}`\n\nDescription:This endpoint updates the details of an existing canned response identified by its unique `id`. You can modify the title, description, HTML content, content type, visibility settings, and associations with groups or agents.\n\n**Path Parameters**\n\n- **`id`**\n    \n\n**Request Body**\n\n- **`title`** (string, required): The updated title of the canned response.\n    \n- **`description`** (string, required): The updated description of the canned response.\n    \n- **`htmlPage`** (string, required): The updated HTML content or URL for the canned response. This field can contain raw HTML or a URL linking to an HTML page.\n    \n- **`contents`** (string, required): The updated type of content related to the canned response. Possible values are \"Videos\", \"Pdf\", and \"Images\".\n    \n- **`visibility`** (string, required): The updated visibility setting for the canned response. Possible values are:\n    \n    - **`ALL`**: Visible to everyone.\n        \n    - **`ONLY_ME`**: Visible only to the creator.\n        \n    - **`AGENTS`**: Visible to specific agents.\n        \n    - **`GROUP`**: Visible to specific groups.\n        \n- **`groupIds`** (array of integers, optional): A list of group IDs associated with the canned response. This field is used if the visibility is set to \"GROUP\".\n    \n- **`agentIds`** (array of integers, optional): A list of agent IDs associated with the canned response. This field is used if the visibility is set to \"AGENTS\".\n    \n- {  \n    \"title\": \"Updated Welcome Message\",  \n    \"description\": \"An updated canned response for welcoming new users.\",  \n    \"htmlPage\": \"Welcome Back!We are glad to see you again.\",  \n    \"contents\": \"Pdf\",  \n    \"visibility\": \"AGENTS\",  \n    \"groupIds\": \\[103, 104\\],  \n    \"agentIds\": \\[203, 204\\]  \n    }\n    \n\n**Responses**\n\n- **200 OK**: The canned response was successfully updated. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the updated canned response.\n        \n    - **`title`** (string): The updated title of the canned response.\n        \n    - **`description`** (string): The updated description of the canned response.\n        \n    - **`htmlPage`** (string): The updated HTML content or URL for the canned response.\n        \n    - **`contents`** (string): The updated type of content related to the canned response.\n        \n    - **`createdBy`** (integer, int64): The ID of the user who originally created the canned response.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the canned response.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the canned response was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the canned response was last updated.\n        \n    - **`status`** (string): The status of the canned response. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - **`visibility`** (string): The updated visibility setting for the canned response.\n        \n    - **`groupIds`** (array of integers, optional): A list of group IDs associated with the canned response.\n        \n    - **`agentIds`** (array of integers, optional): A list of agent IDs associated with the canned response.\n        \n    - {  \n        \"id\": 1,  \n        \"title\": \"Updated Welcome Message\",  \n        \"description\": \"An updated canned response for welcoming new users.\",  \n        \"htmlPage\": \"Welcome Back!We are glad to see you again.\",  \n        \"contents\": \"Pdf\",  \n        \"createdBy\": 1001,  \n        \"updatedBy\": 1002,  \n        \"createdTime\": \"2024-08-12T08:30:00Z\",  \n        \"updatedTime\": \"2024-08-12T09:00:00Z\",  \n        \"status\": \"ACTIVE\",  \n        \"visibility\": \"AGENTS\",  \n        \"groupIds\": \\[103, 104\\],  \n        \"agentIds\": \\[203, 204\\]  \n        }\n        \n- **404 Not Found**: The request could not be fulfilled because the specified `id` does not exist. This status code indicates that no canned response was found with the provided ID."
					},
					"response": [
						{
							"name": "Successfully updated the canned response.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"htmlPage\": \"<string>\",\n  \"contents\": \"Videos\",\n  \"visibility\": \"AGENTS\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"contents\": \"Images\",\n  \"htmlPage\": \"<string>\",\n  \"status\": \"IN_ACTIVE\",\n  \"visibility\": \"GROUP\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}"
						},
						{
							"name": "Canned response not found. The specified ID does not exist.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"htmlPage\": \"<string>\",\n  \"contents\": \"Videos\",\n  \"visibility\": \"AGENTS\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Canned Response by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cannedResponse/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cannedResponse",
								"{id}"
							]
						},
						"description": "**Endpoint**: `GET /v1/cannedResponse/{id}`  \n  \n**Description**: This endpoint retrieves detailed information about a specific canned response identified by its unique `id`. It provides data including the title, description, content type, HTML content, and visibility settings.EndFragment\n\n**Path Parameters**\n\n- **`id`**\n    \n\n**Responses**\n\n- **200 OK**: The request was successful, and the canned response details are returned. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the canned response.\n        \n    - **`title`** (string): The title of the canned response.\n        \n    - **`description`** (string): The description of the canned response.\n        \n    - **`htmlPage`** (string): The HTML content or URL associated with the canned response.\n        \n    - **`contents`** (string): The type of content related to the canned response. Possible values are \"Videos\", \"Pdf\", and \"Images\".\n        \n    - **`createdBy`** (integer, int64): The ID of the user who created the canned response.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the canned response.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the canned response was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the canned response was last updated.\n        \n    - **`status`** (string): The status of the canned response. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - **`visibility`** (string): The visibility setting for the canned response. Possible values are:\n        \n        - **`ALL`**: Visible to everyone.\n            \n        - **`ONLY_ME`**: Visible only to the creator.\n            \n        - **`AGENTS`**: Visible to specific agents.\n            \n        - **`GROUP`**: Visible to specific groups.\n            \n    - **`groupIds`** (array of integers, optional): A list of group IDs associated with the canned response, relevant if visibility is set to \"GROUP\".\n        \n    - **`agentIds`** (array of integers, optional): A list of agent IDs associated with the canned response, relevant if visibility is set to \"AGENTS\".\n        \n    - Json response - {  \n        \"id\": 1,  \n        \"title\": \"Welcome Message\",  \n        \"description\": \"A canned response for welcoming new users.\",  \n        \"htmlPage\": \"Welcome to our platform!We're glad to have you here.\",  \n        \"contents\": \"Pdf\",  \n        \"createdBy\": 12345,  \n        \"updatedBy\": 67890,  \n        \"createdTime\": \"2024-08-12T08:30:00Z\",  \n        \"updatedTime\": \"2024-08-13T09:00:00Z\",  \n        \"status\": \"ACTIVE\",  \n        \"visibility\": \"ALL\",  \n        \"groupIds\": \\[101, 102\\],  \n        \"agentIds\": \\[201, 202\\]  \n        }\n        \n- **404 Not Found**: The request could not be fulfilled because the specified `id` does not exist. This status indicates that no canned response was found with the provided ID."
					},
					"response": [
						{
							"name": "Successfully retrieved the canned response details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"contents\": \"Videos\",\n  \"htmlPage\": \"<string>\",\n  \"status\": \"IN_ACTIVE\",\n  \"visibility\": \"ONLY_ME\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"groupIds\": [\n    \"<long>\",\n    \"<long>\"\n  ],\n  \"agentIds\": [\n    \"<long>\",\n    \"<long>\"\n  ]\n}"
						},
						{
							"name": "Canned response not found. The specified ID does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch All Canned Responses with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/cannedResponse?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"cannedResponse"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							]
						},
						"description": "**The Host Of API is - https://hix.com**\n\n**Endpoint**: `GET /v1/cannedResponse`**  \nDescription**: This endpoint retrieves a paginated list of all canned responses within the system. Each response includes details such as its ID, title, description, content type, and visibility settings.\n\n**Query Parameters**\n\n- **`pageNo`** (integer, required): Specifies the page number of the results to retrieve. For example, `0` for the first page.\n    \n- **`pageSize`** (integer, required): Specifies the number of items per page. For example, `50` to retrieve up to 50 items per page.\n    \n\n**Responses**\n\n- **200 OK**: The request was successful, and the list of canned responses is returned. The response body includes:\n    \n    - **`data`** (array of objects): A list of canned response objects. Each object contains:\n        \n        - **`id`** (integer, int64): The unique identifier of the canned response.\n            \n        - **`title`** (string): The title of the canned response.\n            \n        - **`description`** (string): The description of the canned response.\n            \n        - **`htmlPage`** (string): The HTML content or URL related to the canned response.\n            \n        - **`contents`** (string): The type of content associated with the canned response. Possible values are \"Videos\", \"Pdf\", \"Images\".\n            \n        - **`createdBy`** (integer, int64): The ID of the user who created the canned response.\n            \n        - **`updatedBy`** (integer, int64): The ID of the user who last updated the canned response.\n            \n        - **`createdTime`** (string, date-time): The timestamp when the canned response was created.\n            \n        - **`updatedTime`** (string, date-time): The timestamp when the canned response was last updated.\n            \n        - **`status`** (string): The status of the canned response. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n            \n        - **`visibility`** (string): The visibility setting for the canned response. Possible values include:\n            \n            - **`ALL`**: Visible to everyone.\n                \n            - **`ONLY_ME`**: Visible only to the creator.\n                \n            - **`AGENTS`**: Visible to specific agents.\n                \n            - **`GROUP`**: Visible to specific groups.\n                \n        - **`groupIds`** (array of integers, optional): List of group IDs associated with the canned response. Relevant if visibility is set to `\"GROUP\"`.\n            \n        - **`agentIds`** (array of integers, optional): List of agent IDs associated with the canned response. Relevant if visibility is set to `\"AGENTS\"`.\n            \n    - **`pageNo`** (integer, int32): The current page number of the result set.\n        \n    - **`pageSize`** (integer, int32): The number of items per page.\n        \n    - **`total`** (integer, int32): The total number of canned responses available."
					},
					"response": [
						{
							"name": "Successfully retrieved the list of canned responses.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cannedResponse?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cannedResponse"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<long>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"contents\": \"Images\",\n      \"htmlPage\": \"<string>\",\n      \"status\": \"IN_ACTIVE\",\n      \"visibility\": \"ALL\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"groupIds\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"agentIds\": [\n        \"<long>\",\n        \"<long>\"\n      ]\n    },\n    {\n      \"id\": \"<long>\",\n      \"title\": \"<string>\",\n      \"description\": \"<string>\",\n      \"contents\": \"Pdf\",\n      \"htmlPage\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"visibility\": \"AGENTS\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"groupIds\": [\n        \"<long>\",\n        \"<long>\"\n      ],\n      \"agentIds\": [\n        \"<long>\",\n        \"<long>\"\n      ]\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Delete Canned Response",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/cannedResponse/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"cannedResponse",
								"{id}"
							]
						},
						"description": "**Endpoint**: `DELETE /v1/cannedResponse/{id}`\n\n**Description**: This endpoint allows for the deletion of a specific canned response identified by its unique ID. It is used to remove a canned response from the system.\n\n**Path Parameters**\n\n- **`id`** (integer, required): The unique identifier of the canned response that you want to delete.\n    \n\n**Responses**\n\n- **200 OK**: The request was successful, and the canned response was deleted.\n    \n\n**404 Not Found**: The canned response with the specified ID was not found. The response body includes:\n\n- **`error`** (string): An error message indicating that the canned response with the specified ID was not found. For example, `\"Canned response not found.\"`"
					},
					"response": [
						{
							"name": "Successfully deleted the canned response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Canned response not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cannedResponse/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cannedResponse",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "customField",
			"item": [
				{
					"name": "Create Custom Field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"contents\": \"IMAGES\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"ALL\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customField",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customField"
							]
						},
						"description": "**The Host Of API is -** [<b>https://hix.com</b>](https://hix.com)**Endpoint**: `POST /v1/customField`\n\n**Description**: This endpoint creates a new custom field with the specified attributes. Custom fields are used to capture additional information in the ticketing system and can be configured for different types of content and visibility settings.\n\nRequest body fields:\n\n- **`name`** (string, required): The name of the custom field.\n    \n- **`contents`** (string, required): The type of content associated with the custom field. Possible values are \"VIDEOS\", \"PDFS\", \"IMAGES\".\n    \n- **`ticketDescription`** (string, required): A description of how the custom field is used in the ticketing system.\n    \n- **`visibility`** (string, required): The visibility setting for the custom field. Determines who can view the field. Possible values are:\n    \n    - **`ALL`**: Visible to everyone.\n        \n    - **`AGENT`**: Visible only to agents.\n        \n    - **`USER`**: Visible only to users.\n        \n- **`isEditableByUser`** (boolean, required): Indicates whether the custom field is editable by the user.\n    \n- **`isEditableByAgent`** (boolean, required): Indicates whether the custom field is editable by the agent.\n    \n- Json Request -{  \n    \"name\": \"Customer Feedback\",  \n    \"contents\": \"VIDEOS\",  \n    \"ticketDescription\": \"A field for capturing customer feedback videos.\",  \n    \"visibility\": \"ALL\",  \n    \"isEditableByUser\": true,  \n    \"isEditableByAgent\": false  \n    }\n    \n\n**Responses**\n\n- **201 Created**: The request was successful, and the custom field was created. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the newly created custom field.\n        \n    - **`name`** (string): The name of the custom field.\n        \n    - **`contents`** (string): The type of content associated with the custom field.\n        \n    - **`ticketDescription`** (string): A description of how the custom field is used in the ticketing system.\n        \n    - **`visibility`** (string): The visibility setting for the custom field.\n        \n    - **`isEditableByUser`** (boolean): Indicates whether the custom field is editable by the user.\n        \n    - **`isEditableByAgent`** (boolean): Indicates whether the custom field is editable by the agent.\n        \n    - **`createdBy`** (integer, int64): The ID of the user who created the custom field.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the custom field.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the custom field was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the custom field was last updated.\n        \n    - **`status`** (string): The status of the custom field. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - Json Response - {  \n        \"id\": 12345,  \n        \"name\": \"Customer Feedback\",  \n        \"contents\": \"VIDEOS\",  \n        \"ticketDescription\": \"A field for capturing customer feedback videos.\",  \n        \"visibility\": \"ALL\",  \n        \"isEditableByUser\": true,  \n        \"isEditableByAgent\": false,  \n        \"createdBy\": 6789,  \n        \"updatedBy\": 6789,  \n        \"createdTime\": \"2024-08-12T14:30:00Z\",  \n        \"updatedTime\": \"2024-08-12T14:30:00Z\",  \n        \"status\": \"ACTIVE\"  \n        }"
					},
					"response": [
						{
							"name": "Successfully created the custom field.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"contents\": \"IMAGES\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"ALL\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customField",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customField"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"contents\": \"IMAGES\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"AGENT\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"status\": \"IN_ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update Custom Field By Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"contents\": \"VIDEOS\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"AGENT\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/customField/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"customField",
								"{id}"
							]
						},
						"description": "**Endpoint**: `PUT /v1/customField/{id}`\n\n**Description**: This endpoint updates an existing custom field with the specified attributes. Use this endpoint to modify the details of a custom field such as its name, content type, description, and visibility settings.\n\n**Request Body**\n\nThe request body must be a JSON object with the following fields:\n\n- **`name`** (string, required): The updated name of the custom field.\n    \n- **`contents`** (string, required): The updated type of content associated with the custom field. Possible values are \"VIDEOS\", \"PDFS\", \"IMAGES\".\n    \n- **`ticketDescription`** (string, required): An updated description of how the custom field is used in the ticketing system.\n    \n- **`visibility`** (string, required): The updated visibility setting for the custom field. Determines who can view the field. Possible values are:\n    \n    - **`ALL`**: Visible to everyone.\n        \n    - **`AGENT`**: Visible only to agents.\n        \n    - **`USER`**: Visible only to users.\n        \n- **`isEditableByUser`** (boolean, required): Indicates whether the custom field is editable by the user.\n    \n- **`isEditableByAgent`** (boolean, required): Indicates whether the custom field is editable by the agent.\n    \n\n**Responses**\n\n- **200 OK**: Indicates that the custom field was successfully updated. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the updated custom field.\n        \n    - **`name`** (string): The updated name of the custom field.\n        \n    - **`contents`** (string): The updated type of content associated with the custom field.\n        \n    - **`ticketDescription`** (string): An updated description of how the custom field is used in the ticketing system.\n        \n    - **`visibility`** (string): The updated visibility setting for the custom field.\n        \n    - **`isEditableByUser`** (boolean): Indicates whether the custom field is editable by the user.\n        \n    - **`isEditableByAgent`** (boolean): Indicates whether the custom field is editable by the agent.\n        \n    - **`createdBy`** (integer, int64): The ID of the user who created the custom field.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the custom field.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the custom field was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the custom field was last updated.\n        \n    - **`status`** (string): The status of the custom field. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - Json Response - {  \n        \"id\": 12345,  \n        \"name\": \"Updated Feedback Field\",  \n        \"contents\": \"PDFS\",  \n        \"ticketDescription\": \"An updated description for capturing feedback through PDFs.\",  \n        \"visibility\": \"AGENT\",  \n        \"isEditableByUser\": false,  \n        \"isEditableByAgent\": true,  \n        \"createdBy\": 6789,  \n        \"updatedBy\": 6789,  \n        \"createdTime\": \"2024-08-12T14:30:00Z\",  \n        \"updatedTime\": \"2024-08-12T15:00:00Z\",  \n        \"status\": \"ACTIVE\"  \n        }"
					},
					"response": [
						{
							"name": "Successfully updated the custom field.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"contents\": \"VIDEOS\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"AGENT\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/customField/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"customField",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"contents\": \"VIDEOS\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"USER\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"status\": \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Fetch Custom Field By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customField/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customField",
								"{id}"
							]
						},
						"description": "**Endpoint**: `GET /v1/customField/{id}`\n\n**Description**: This endpoint retrieves the details of a custom field identified by its unique ID. It provides all the information about the custom field, including its name, content type, description, visibility, and editability settings.\n\n**Path Parameters**\n\n- **`id`**\n    \n\n**Responses**\n\n- **200 OK**: Indicates that the custom field details were successfully retrieved. The response body includes:\n    \n    - **`id`** (integer, int64): The unique identifier of the custom field.\n        \n    - **`name`** (string): The name of the custom field.\n        \n    - **`contents`** (string): The type of content associated with the custom field. Possible values are \"VIDEOS\", \"PDFS\", and \"IMAGES\".\n        \n    - **`ticketDescription`** (string): Description of how the custom field is used in the ticketing system.\n        \n    - **`visibility`** (string): Visibility setting for the custom field. Possible values are:\n        \n        - **`ALL`**: Visible to everyone.\n            \n        - **`AGENT`**: Visible only to agents.\n            \n        - **`USER`**: Visible only to users.\n            \n    - **`isEditableByUser`** (boolean): Indicates whether the custom field is editable by the user. `true` if editable, `false` otherwise.\n        \n    - **`isEditableByAgent`** (boolean): Indicates whether the custom field is editable by the agent. `true` if editable, `false` otherwise.\n        \n    - **`createdBy`** (integer, int64): The ID of the user who created the custom field.\n        \n    - **`updatedBy`** (integer, int64): The ID of the user who last updated the custom field.\n        \n    - **`createdTime`** (string, date-time): The timestamp when the custom field was created.\n        \n    - **`updatedTime`** (string, date-time): The timestamp when the custom field was last updated.\n        \n    - **`status`** (string): The status of the custom field. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n        \n    - Json Response -{  \n        \"id\": 12345,  \n        \"name\": \"Customer Feedback\",  \n        \"contents\": \"PDFS\",  \n        \"ticketDescription\": \"Field for uploading feedback in PDF format.\",  \n        \"visibility\": \"AGENT\",  \n        \"isEditableByUser\": false,  \n        \"isEditableByAgent\": true,  \n        \"createdBy\": 6789,  \n        \"updatedBy\": 6789,  \n        \"createdTime\": \"2024-08-12T14:30:00Z\",  \n        \"updatedTime\": \"2024-08-12T15:00:00Z\",  \n        \"status\": \"ACTIVE\"  \n        }"
					},
					"response": [
						{
							"name": "Successfully retrieved the custom field details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customField/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customField",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"contents\": \"VIDEOS\",\n  \"ticketDescription\": \"<string>\",\n  \"visibility\": \"AGENT\",\n  \"isEditableByUser\": \"<boolean>\",\n  \"isEditableByAgent\": \"<boolean>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"status\": \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Custom Fields with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customField?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customField"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "(Required) "
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "(Required) "
								}
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndpoint**: `GET /v1/customField`\n\n**Description**: This endpoint retrieves a paginated list of all custom fields in the system. Each custom field includes details such as its ID, name, content type, description, and visibility settings. The pagination parameters allow for controlling the amount of data returned in each response.\n\n**Query Parameters**\n\n- **`pageNo`** (query parameter, integer): The current page number of the result set. This value determines which page of results will be returned.\n    \n- **`pageSize`** (query parameter, integer): The number of items to include per page. This value specifies the page size for pagination.\n    \n\n**Responses**\n\n- **200 OK**: Indicates that the custom fields list was successfully retrieved. The response body includes:\n    \n    - **`pageNo`** (integer, int32): The current page number of the result set.\n        \n    - **`pageSize`** (integer, int32): The number of items per page.\n        \n    - **`total`** (integer, int32): The total number of custom fields available in the system.\n        \n    - **`data`** (array of objects): A list of custom field objects, each containing:\n        \n        - **`id`** (integer, int64): The unique identifier of the custom field.\n            \n        - **`name`** (string): The name of the custom field.\n            \n        - **`contents`** (string): The type of content associated with the custom field. Possible values are \"VIDEOS\", \"PDFS\", and \"IMAGES\".\n            \n        - **`ticketDescription`** (string): Description of how the custom field is used in the ticketing system.\n            \n        - **`visibility`** (string): Visibility setting for the custom field. Possible values are \"ALL\", \"AGENT\", and \"USER\".\n            \n        - **`isEditableByUser`** (boolean): Indicates whether the custom field is editable by the user.\n            \n        - **`isEditableByAgent`** (boolean): Indicates whether the custom field is editable by the agent.\n            \n        - **`createdBy`** (integer, int64): The ID of the user who created the custom field.\n            \n        - **`updatedBy`** (integer, int64): The ID of the user who last updated the custom field.\n            \n        - **`createdTime`** (string, date-time): The timestamp when the custom field was created.\n            \n        - **`updatedTime`** (string, date-time): The timestamp when the custom field was last updated.\n            \n        - **`status`** (string): The status of the custom field. Possible values are \"ACTIVE\" and \"IN_ACTIVE\".\n            \n        - json Response-{  \n            \"pageNo\": 1,  \n            \"pageSize\": 10,  \n            \"total\": 50,  \n            \"data\": \\[  \n            {  \n            \"id\": 1,  \n            \"name\": \"Sample Field 1\",  \n            \"contents\": \"VIDEOS\",  \n            \"ticketDescription\": \"Description 1\",  \n            \"visibility\": \"ALL\",  \n            \"isEditableByUser\": true,  \n            \"isEditableByAgent\": false,  \n            \"createdBy\": 101,  \n            \"updatedBy\": 102,  \n            \"createdTime\": \"2024-01-01T00:00:00Z\",  \n            \"updatedTime\": \"2024-02-01T00:00:00Z\",  \n            \"status\": \"ACTIVE\"  \n            },  \n            {  \n            \"id\": 2,  \n            \"name\": \"Sample Field 2\",  \n            \"contents\": \"PDFS\",  \n            \"ticketDescription\": \"Description 2\",  \n            \"visibility\": \"AGENT\",  \n            \"isEditableByUser\": false,  \n            \"isEditableByAgent\": true,  \n            \"createdBy\": 103,  \n            \"updatedBy\": 104,  \n            \"createdTime\": \"2024-03-01T00:00:00Z\",  \n            \"updatedTime\": \"2024-04-01T00:00:00Z\",  \n            \"status\": \"IN_ACTIVE\"  \n            }  \n            \\]  \n            }"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of custom fields.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customField?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customField"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>",
											"description": "(Required) "
										},
										{
											"key": "pageSize",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\",\n  \"data\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"contents\": \"PDFS\",\n      \"ticketDescription\": \"<string>\",\n      \"visibility\": \"AGENT\",\n      \"isEditableByUser\": \"<boolean>\",\n      \"isEditableByAgent\": \"<boolean>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"status\": \"ACTIVE\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"contents\": \"PDFS\",\n      \"ticketDescription\": \"<string>\",\n      \"visibility\": \"AGENT\",\n      \"isEditableByUser\": \"<boolean>\",\n      \"isEditableByAgent\": \"<boolean>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"status\": \"IN_ACTIVE\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Custom Field by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customField/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customField",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) The unique identifier of the custom field to be deleted."
								}
							]
						},
						"description": "**The Host Of API is** [<b>https://hix.com</b>](https://hix.com)**  \nEndpoint: `DELETE /v1/customField/{id}`  \nDescription:This endpoint allows you to delete a custom field from the system by providing its unique identifier. The field will be permanently removed, and this operation cannot be undone.\n\n#### Parameters - id\n\n#### Responses\n\n- **200 OK**"
					},
					"response": [
						{
							"name": "Successfully deleted the custom field.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customField/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customField",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Custom field not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customField/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customField",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "agent",
			"item": [
				{
					"name": "Create a New Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"language\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/agent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"agent"
							]
						},
						"description": "The Host Of API is - https://hix.com\n\nEndPoint: /v1/agent\n\n**Description**: This endpoint creates a new agent with the specified details. The new agent will be assigned a unique identifier and associated with the provided skills, site, and status.\n\n**Responses**:\n\n- **201 Created**\n    \n- Json Response is {  \n    \"agentId\": 123,  \n    \"agentName\": \"John Doe\",  \n    \"email\": \"[johndoe@example.com](https://mailto:johndoe@example.com)\",  \n    \"skillIds\": \\[\"SKILL002\", \"SKILL001\"\\],  \n    \"phoneNumber\": \"9987654321\",  \n    \"language\": \"English\",  \n    \"status\": \"ACTIVE\",  \n    \"siteId\": \"SITE001\",  \n    \"createdBy\": 456,  \n    \"updatedBy\": 456,  \n    \"createdTime\": \"2024-08-12T10:00:00Z\",  \n    \"updatedTime\": \"2024-08-12T10:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Successfully created the agent.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"language\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/agent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"agent"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"agentId\": \"<long>\",\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"language\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an Existing Agent By  Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"language\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/agent/{agentId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"agent",
								"{agentId}"
							]
						},
						"description": "The Host Of API is https://hix.com  \nEndPoint: /v1/agent/{agentId}  \nDescription:This endpoint updates the details of an existing agent with the specified `agentId`. It allows modifications to the agent's name, email, associated skills, phone number, language, status, and site ID.\n\n**Path Parameters**:**`agentId`**\n\n**Request Body**:\n\n- **`agentName`** (string): The name of the agent.\n    \n- **`email`** (string, email): The email address of the agent.\n    \n- **`skillIds`** (array of strings): A list of skill IDs associated with the agent.\n    \n- **`phoneNumber`** (string): The phone number of the agent.\n    \n- **`language`** (string): The language spoken by the agent.\n    \n- **`status`** (string): The status of the agent. Possible values are `ACTIVE` and `IN_ACTIVE`.\n    \n- **`siteId`** (string): The site ID where the agent is assigned.\n    \n\n**Responses**:\n\n- 200 OK\n    \n- Json Response - {  \n    \"agentId\": 123,  \n    \"agentName\": \"Jane Doe\",  \n    \"email\": \"[janedoe@example.com](https://mailto:janedoe@example.com)\",  \n    \"skillIds\": \\[\"SKILL002\", \"SKILL001\"\\],  \n    \"phoneNumber\": \"9987654321\",  \n    \"language\": \"English\",  \n    \"status\": \"ACTIVE\",  \n    \"siteId\": \"SITE001\",  \n    \"createdBy\": 456,  \n    \"updatedBy\": 789,  \n    \"createdTime\": \"2024-08-12T10:00:00Z\",  \n    \"updatedTime\": \"2024-08-12T11:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Successfully updated the agent.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"language\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/agent/:agentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"agent",
										":agentId"
									],
									"variable": [
										{
											"key": "agentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"agentId\": \"<long>\",\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"IN_ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"language\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Agents with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/agent?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"agent"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							]
						},
						"description": "The Host of API is https://hix.com\n\nEndPoint : GET /v1/agent\n\n**Description**: This endpoint retrieves a paginated list of all agents in the system. The response includes detailed information about each agent, such as their ID, name, email, associated skills, phone number, language, status, and site ID. Pagination parameters are used to control the number of results returned and the specific page of results.\n\n**Query Parameters**:\n\n- **`pageNo`** (integer, int32, query): The page number of the result set to retrieve. Must be specified.\n    \n- **`pageSize`** (integer, int32, query): The number of agents to retrieve per page. Must be specified.\n    \n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"data\": \\[  \n    {  \n    \"agentId\": 1,  \n    \"agentName\": \"John Doe\",  \n    \"email\": \"[johndoe@example.com](https://mailto:johndoe@example.com)\",  \n    \"skillIds\": \\[\"SKILL002\", \"SKILL001\"\\],  \n    \"phoneNumber\": \"9987654321\",  \n    \"language\": \"English\",  \n    \"status\": \"ACTIVE\",  \n    \"siteId\": \"SITE001\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2024-01-01T00:00:00Z\",  \n    \"updatedTime\": \"2024-02-01T00:00:00Z\"  \n    },  \n    {  \n    \"agentId\": 2,  \n    \"agentName\": \"Jane Smith\",  \n    \"email\": \"[janesmith@example.com](https://mailto:janesmith@example.com)\",  \n    \"skillIds\": \\[\"SKILL002\", \"SKILL001\"\\],  \n    \"phoneNumber\": \"9987654322\",  \n    \"language\": \"Spanish\",  \n    \"status\": \"IN_ACTIVE\",  \n    \"siteId\": \"SITE002\",  \n    \"createdBy\": 103,  \n    \"updatedBy\": 104,  \n    \"createdTime\": \"2024-03-01T00:00:00Z\",  \n    \"updatedTime\": \"2024-04-01T00:00:00Z\"  \n    }  \n    \\],  \n    \"pageNo\": 0,  \n    \"pageSize\": 50,  \n    \"total\": 10  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of agents.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/agent?pageNo=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"agent"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"agentId\": \"<long>\",\n      \"agentName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"skillIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"phoneNumber\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"siteId\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"language\": \"<string>\"\n    },\n    {\n      \"agentId\": \"<long>\",\n      \"agentName\": \"<string>\",\n      \"email\": \"<email>\",\n      \"skillIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"phoneNumber\": \"<string>\",\n      \"status\": \"ACTIVE\",\n      \"siteId\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"language\": \"<string>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Fetch Agent By agentId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/agent/{agentId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"agent",
								"{agentId}"
							]
						},
						"description": "The Host Of API is https://hix.com  \nEndPoint - /v1/agent/{agentId}\n\n**Description**: This endpoint retrieves the details of an agent using the specified `agentId`. It provides comprehensive information about the agent, including their name, email, associated skills, contact details, and status.\n\nStartFragment\n\n**Path Parameters**: **`agentId`**\n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response {  \n    \"agentId\": 123,  \n    \"agentName\": \"Jane Doe\",  \n    \"email\": \"[janedoe@example.com](https://mailto:janedoe@example.com)\",  \n    \"skillIds\": \\[\"SKILL002\", \"SKILL001\"\\],  \n    \"phoneNumber\": \"9987654321\",  \n    \"language\": \"English\",  \n    \"status\": \"ACTIVE\",  \n    \"siteId\": \"SITE001\",  \n    \"createdBy\": 456,  \n    \"updatedBy\": 789,  \n    \"createdTime\": \"2024-08-12T10:00:00Z\",  \n    \"updatedTime\": \"2024-08-12T11:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the agent details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/agent/{agentId}",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"agent",
										"{agentId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"agentId\": \"<long>\",\n  \"agentName\": \"<string>\",\n  \"email\": \"<email>\",\n  \"skillIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"phoneNumber\": \"<string>\",\n  \"status\": \"IN_ACTIVE\",\n  \"siteId\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"language\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete Agent By agentId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/agent/{agentId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"agent",
								"{agentId}"
							]
						},
						"description": "EndPoint: DELETE /v1/agent/{agentId}\n\n**Description**: This endpoint deletes the agent specified by the given agent ID. If the agent is successfully deleted, a confirmation message is returned. If the agent with the specified ID is not found, an error message is returned.\n\n**Path Parameters**:**`agentId`**\n\n**Responses**: **200 OK**:"
					},
					"response": [
						{
							"name": "Successfully deleted the agent.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/agent/:agentId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"agent",
										":agentId"
									],
									"variable": [
										{
											"key": "agentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Agent not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/agent/:agentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"agent",
										":agentId"
									],
									"variable": [
										{
											"key": "agentId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "assign",
			"item": [
				{
					"name": "Assign Role to User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assign?userId=<long>&roleName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assign"
							],
							"query": [
								{
									"key": "userId",
									"value": "<long>",
									"description": "(Required) "
								},
								{
									"key": "roleName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "**The Host of API is https://hix.com  \nEndPoint: /v1/assign**\n\n**Description**: This endpoint assigns a specific role to a user based on the user ID and role name provided. It returns a confirmation message upon successful role assignment. If the request parameters are invalid or if the user or role is not found, an appropriate error message is returned.\n\n**Query Parameters**:\n\n- **`userId`** (integer, int64, query): The unique identifier of the user to whom the role will be assigned. This parameter is required.\n    \n- **`roleName`** (string, query): The name of the role to be assigned to the user. This parameter is required.\n    \n\n**Responses**: **200 OK**"
					},
					"response": [
						{
							"name": "Successfully assigned the role to the user.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/assign?userId=<long>&roleName=<string>",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"assign"
									],
									"query": [
										{
											"key": "userId",
											"value": "<long>",
											"description": "(Required) "
										},
										{
											"key": "roleName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Bad request. Invalid user ID or role name.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assign?userId=<long>&roleName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assign"
									],
									"query": [
										{
											"key": "userId",
											"value": "<long>",
											"description": "(Required) "
										},
										{
											"key": "roleName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "User or role not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assign?userId=<long>&roleName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assign"
									],
									"query": [
										{
											"key": "userId",
											"value": "<long>",
											"description": "(Required) "
										},
										{
											"key": "roleName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "product",
			"item": [
				{
					"name": "Create a New Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productName\": \"<string>\",\n  \"productDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						},
						"description": "**EndPoint:** POST /v1/product**  \nDescription**: This endpoint creates a new product with the provided name and description. The server responds with the details of the newly created product, including its unique identifier and timestamps for creation and updates.\n\n**Responses**:\n\n- **201 Created**\n    \n- Json Resposne -{  \n    \"productId\": 8929782,  \n    \"productName\": \"abc\",  \n    \"productDescription\": \"\",  \n    \"createdBy\": 123,  \n    \"updatedBy\": 123,  \n    \"createdTime\": \"2024-08-12T12:34:56Z\",  \n    \"updatedTime\": \"2024-08-12T12:34:56Z\"  \n    }"
					},
					"response": [
						{
							"name": "Product created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productName\": \"<string>\",\n  \"productDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/product",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"productId\": \"<long>\",\n  \"productName\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"productDescription\": \"<string>\",\n  \"updatedBy\": \"<long>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update Product By productId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productName\": \"<string>\",\n  \"productDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/product/{productId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								"{productId}"
							]
						},
						"description": "**EndPoint: /v1/product/{productId}  \nDescription**: This endpoint updates the details of an existing product using its unique `productId`. It requires the new values for the product's name and description. Upon successful update, the server responds with the details of the updated product, including timestamps for creation and last update.\n\n**Path Parameter**: **`productId`**\n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"productId\": 8929782,  \n    \"productName\": \"abc\",  \n    \"productDescription\": \"\",  \n    \"createdBy\": 123,  \n    \"updatedBy\": 456,  \n    \"createdTime\": \"2024-01-01T00:00:00Z\",  \n    \"updatedTime\": \"2024-08-12T12:34:56Z\"  \n    }"
					},
					"response": [
						{
							"name": "Product updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productName\": \"<string>\",\n  \"productDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/product/:productId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"productId\": \"<long>\",\n  \"productName\": \"<string>\",\n  \"updatedBy\": \"<long>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"productDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Delete Product By productId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product/{productId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								"{productId}"
							]
						},
						"description": "**EndPoint: /v1/product/{productId}****Description**: This endpoint allows for the deletion of a product identified by its unique `productId`. When a product is successfully deleted, a confirmation message is returned. If the product does not exist, a `404 Not Found` response is provided.\n\n**Path Parameter**: **`productId`**\n\n**Responses: 200 OK**"
					},
					"response": [
						{
							"name": "Product deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/product/:productId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Product not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Products with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							]
						},
						"description": "**EndPoint:** GET /v1/product**  \nDescription**: This endpoint retrieves a paginated list of all products from the system. Each product includes details such as its unique identifier, name, description, and timestamps related to creation and updates.**  \nQuery Parameters**:\n\n- **`pageNo`** (integer, optional): Specifies the page number to retrieve. Defaults to 1 if not provided.\n    \n- **`pageSize`** (integer, optional): Specifies the number of products to retrieve per page. Defaults to 50 if not provided.\n    \n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"data\": \\[  \n    {  \n    \"productId\": 8929782,  \n    \"productName\": \"abc\",  \n    \"productDescription\": \"\",  \n    \"createdBy\": 1,  \n    \"updatedBy\": 2,  \n    \"createdTime\": \"2024-01-01T00:00:00Z\",  \n    \"updatedTime\": \"2024-02-01T00:00:00Z\"  \n    },  \n    {  \n    \"productId\": 8929783,  \n    \"productName\": \"def\",  \n    \"productDescription\": \"\",  \n    \"createdBy\": 3,  \n    \"updatedBy\": 4,  \n    \"createdTime\": \"2024-03-01T00:00:00Z\",  \n    \"updatedTime\": \"2024-04-01T00:00:00Z\"  \n    }  \n    \\],  \n    \"pageNo\": 1,  \n    \"pageSize\": 50,  \n    \"total\": 10  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of products.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/product?pageNo=<integer>&pageSize=<integer>",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"product"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"productId\": \"<long>\",\n      \"productName\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\"\n    },\n    {\n      \"productId\": \"<long>\",\n      \"productName\": \"<string>\",\n      \"productDescription\": \"<string>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Fetch Product By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product/{productId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								"{productId}"
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndPoint: /v1/product/{productId}  \nDescription**: This endpoint retrieves detailed information about a specific product using its unique identifier. The response includes the product's ID, name, description, and metadata related to its creation and last update.\n\n**Path Parameter**: productId\n\n**Responses**: **200 OK**\n\nJson Response - {  \n\"productId\": 8929782,  \n\"productName\": \"abc\",  \n\"productDescription\": \"\",  \n\"createdBy\": 101,  \n\"updatedBy\": 102,  \n\"createdTime\": \"2024-01-01T00:00:00Z\",  \n\"updatedTime\": \"2024-02-01T00:00:00Z\"  \n}"
					},
					"response": [
						{
							"name": "Successfully retrieved the product details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/product/:productId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"productId\": \"<long>\",\n  \"productName\": \"<string>\",\n  \"productDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "service",
			"item": [
				{
					"name": "Create Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/service",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service"
							]
						},
						"description": "**EndPoint: /v1/service  \nDescription**: This endpoint allows for the creation of a new service with the provided details, including the name, description, timing, and associated sites.\n\n**Responses**: **201 Created**\n\nJson Response - {  \n\"serviceId\": \"12345\",  \n\"serviceName\": \"Service Name\",  \n\"serviceDescription\": \"Service Description\",  \n\"startTime\": \"2023-08-10T10:00:00Z\",  \n\"endTime\": \"2023-08-10T18:00:00Z\",  \n\"createdBy\": 1001,  \n\"updatedBy\": 1002,  \n\"createdTime\": \"2023-08-01T00:00:00Z\",  \n\"updatedTime\": \"2023-08-02T00:00:00Z\",  \n\"siteIds\": \\[\"SITE001\", \"SITE002\"\\]  \n}"
					},
					"response": [
						{
							"name": "Successfully created the service.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/service",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"service"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"serviceId\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update Service By serviceId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/service/{serviceId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service",
								"{serviceId}"
							]
						},
						"description": "EndPoint : /v1/service/{serviceId}\n\n**Description**: Updates the details of an existing service specified by the `serviceId`. This includes modifying the service's name, description, timing, and associated sites.\n\n**Path Parameters**:**`serviceId`**\n\nResponse: 200 OK\n\nJson Response -{  \n\"serviceId\": \"12345\",  \n\"serviceName\": \"Updated Service Name\",  \n\"serviceDescription\": \"Updated Service Description\",  \n\"startTime\": \"2024-08-10T10:00:00Z\",  \n\"endTime\": \"2024-08-10T18:00:00Z\",  \n\"createdBy\": 1001,  \n\"updatedBy\": 1002,  \n\"createdTime\": \"2023-08-01T00:00:00Z\",  \n\"updatedTime\": \"2024-08-02T00:00:00Z\",  \n\"siteIds\": \\[\"SITE001\", \"SITE002\"\\]  \n}"
					},
					"response": [
						{
							"name": "Successfully updated the service.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/service/:serviceId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"service",
										":serviceId"
									],
									"variable": [
										{
											"key": "serviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"serviceId\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Delete Service By deleteId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service/{serviceId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service",
								"{serviceId}"
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndPoint:** DELETE /v1/service/{serviceId}**  \nDescription**: Deletes the service specified by the `serviceId`. If the service is successfully deleted, the response will confirm the deletion. If the service with the given ID does not exist, an error response will be returned.\n\n**Path Parameters**:**`serviceId`**\n\n**Responses**: **200 OK**"
					},
					"response": [
						{
							"name": "Successfully deleted the service.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/service/:serviceId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"service",
										":serviceId"
									],
									"variable": [
										{
											"key": "serviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"serviceId\": \"<string>\",\n  \"status\": \"SUCCESS\"\n}"
						},
						{
							"name": "Service not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/:serviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										":serviceId"
									],
									"variable": [
										{
											"key": "serviceId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch Service By serviceId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service/{serviceId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service",
								"{serviceId}"
							]
						},
						"description": "The Host Of API is https://hix.com  \nEndPoint: GET /v1/service/{service}\n\n**Description**: Retrieves detailed information about a service specified by the `serviceId`. This endpoint provides details such as the service name, description, start and end times, and associated site IDs.\n\n**Path Parameters**:**`serviceId`**\n\n**Responses**:\n\n- **200 OK**\n    \n- Json response - {  \n    \"serviceId\": \"12345\",  \n    \"serviceName\": \"Sample Service\",  \n    \"serviceDescription\": \"This is a description of the sample service.\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2019-08-01T10:00:00Z\",  \n    \"updatedTime\": \"2020-01-01T10:00:00Z\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\]  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the service details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/service/:serviceId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"service",
										":serviceId"
									],
									"variable": [
										{
											"key": "serviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"serviceId\": \"<string>\",\n  \"serviceName\": \"<string>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"serviceDescription\": \"<string>\"\n}"
						},
						{
							"name": "Service not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service/:serviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service",
										":serviceId"
									],
									"variable": [
										{
											"key": "serviceId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Services with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service?pageNo=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndPoint:** GET /v1/service**  \nDescription**: Retrieves a paginated list of all services. This endpoint allows you to fetch service data including details such as service name, description, start and end times, and associated site IDs. Pagination parameters are used to control the amount of data returned in a single request.\n\n**Query Parameters**:\n\n- **`pageNo`** (integer, required): The page number of the results to retrieve. This parameter is used for pagination to specify which page of results you want.\n    \n- **`pageSize`** (integer, required): The number of results per page. This parameter controls the number of records returned on each page.\n    \n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response -{  \n    \"data\": \\[  \n    {  \n    \"serviceId\": \"12345\",  \n    \"serviceName\": \"Service A\",  \n    \"serviceDescription\": \"Description of Service A\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2019-08-01T10:00:00Z\",  \n    \"updatedTime\": \"2020-01-01T10:00:00Z\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\]  \n    },  \n    {  \n    \"serviceId\": \"67890\",  \n    \"serviceName\": \"Service B\",  \n    \"serviceDescription\": \"Description of Service B\",  \n    \"startTime\": \"2020-09-10T10:00:00Z\",  \n    \"endTime\": \"2021-09-10T10:00:00Z\",  \n    \"createdBy\": 103,  \n    \"updatedBy\": 104,  \n    \"createdTime\": \"2020-02-01T10:00:00Z\",  \n    \"updatedTime\": \"2021-02-01T10:00:00Z\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE003\"\\]  \n    }  \n    \\],  \n    \"pageNo\": 1,  \n    \"pageSize\": 50,  \n    \"total\": 10  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved the list of services.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/service?pageNo=<integer>&pageSize=<integer>",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"service"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"serviceId\": \"<string>\",\n      \"serviceName\": \"<string>\",\n      \"startTime\": \"<dateTime>\",\n      \"endTime\": \"<dateTime>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"siteIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"serviceDescription\": \"<string>\"\n    },\n    {\n      \"serviceId\": \"<string>\",\n      \"serviceName\": \"<string>\",\n      \"startTime\": \"<dateTime>\",\n      \"endTime\": \"<dateTime>\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"siteIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"serviceDescription\": \"<string>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "vendor",
			"item": [
				{
					"name": "Create a Vendor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendor"
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndPoint: /v1/vendor  \nDescription**: Creates a new vendor with the provided details. This endpoint allows you to specify a vendor's name, description, associated site IDs, and the start and end times for the vendor's activity. Upon successful creation, the vendor is assigned a unique identifier and the response includes all details of the newly created vendor.\n\n**Request Body**:\n\n- **`vendorName`** (string, required): The name of the vendor.\n    \n- **`vendorDescription`** (string, optional): A description of the vendor.\n    \n- **`siteIds`** (array of strings, required): A list of site IDs associated with the vendor.\n    \n- **`startTime`** (string, format: date-time, required): The start time of the vendor's activity.\n    \n- **`endTime`** (string, format: date-time, required): The end time of the vendor's activity.\n    \n\n**Responses**:\n\n- **201 Created**\n    \n- Json Response - {  \n    \"vendorId\": 221,  \n    \"vendorName\": \"Vendor Name\",  \n    \"vendorDescription\": \"A description of the vendor\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\],  \n    \"status\": \"ACTIVE\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2023-01-01T10:00:00Z\",  \n    \"updatedTime\": \"2023-01-01T10:00:00Z\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Vendor successfully created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/vendor",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"vendor"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"vendorId\": \"<long>\",\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"IN_ACTIVE\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch Vendor By vendorId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vendor/{vendorId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendor",
								"{vendorId}"
							]
						},
						"description": "**The Host Of API is** [<b>https://hix.com</b>](https://hix.com)**EndPoint: /v1/vendor/{vendorId}****Description**: Retrieves detailed information about a specific vendor based on the provided `vendorId`. This endpoint returns all the available data about the vendor, including its name, description, associated site IDs, status, and activity timeframes.\n\n**Path Parameters**:vendorId\n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"vendorId\": 221,  \n    \"vendorName\": \"Vendor ABC\",  \n    \"vendorDescription\": \"Description of Vendor ABC\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\],  \n    \"status\": \"ACTIVE\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2023-01-01T10:00:00Z\",  \n    \"updatedTime\": \"2023-01-02T10:00:00Z\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Vendor details successfully retrieved.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/vendor/:vendorId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"vendor",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"vendorId\": \"<long>\",\n  \"vendorName\": \"<string>\",\n  \"vendorDescription\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"IN_ACTIVE\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update a Vendor By vendorId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendor/{vendorId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendor",
								"{vendorId}"
							]
						},
						"description": "**The Host Of API is https://hix.com  \nEndPoint: PUT /v1/vendor/{vendorId}  \nDescription**: Updates the details of an existing vendor identified by the `vendorId`. This endpoint allows you to modify the vendor's name, description, associated site IDs, and the start and end times for the vendor's activity. The response includes the updated details of the vendor.\n\n**Path Parameters**:vendorId\n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"vendorId\": 221,  \n    \"vendorName\": \"Updated Vendor Name\",  \n    \"vendorDescription\": \"Updated description of the vendor\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\],  \n    \"status\": \"ACTIVE\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2023-01-01T10:00:00Z\",  \n    \"updatedTime\": \"2023-01-02T10:00:00Z\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\"  \n    }"
					},
					"response": [
						{
							"name": "Vendor successfully updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://hix.com/v1/vendor/:vendorId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"vendor",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"vendorId\": \"<long>\",\n  \"vendorName\": \"<string>\",\n  \"siteIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"status\": \"ACTIVE\",\n  \"createdBy\": \"<long>\",\n  \"updatedBy\": \"<long>\",\n  \"createdTime\": \"<dateTime>\",\n  \"updatedTime\": \"<dateTime>\",\n  \"startTime\": \"<dateTime>\",\n  \"endTime\": \"<dateTime>\",\n  \"vendorDescription\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Fetch All Vendors with pagination",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vendor?pageNo=1&pageSize=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendor"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "50"
								}
							]
						},
						"description": "**The Host Of API Is** [<b>https://hix.com</b>](https://hix.co)\n\n**EndPoint :** GET /v1/vendor**  \nDescription**: Retrieves a paginated list of all vendors. This endpoint supports pagination through the `pageNo` and `pageSize` query parameters.\n\n**Query Parameters**:\n\n- **`pageNo`** (integer, optional): The page number to retrieve, starting from 1. Defaults to 1.\n    \n- **`pageSize`** (integer, optional): The number of vendors to retrieve per page. Defaults to 50.\n    \n\n**Responses**:\n\n- **200 OK**\n    \n- Json Response - {  \n    \"data\": \\[  \n    {  \n    \"vendorId\": 221,  \n    \"vendorName\": \"Vendor ABC\",  \n    \"vendorDescription\": \"Description of Vendor ABC\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\],  \n    \"status\": \"ACTIVE\",  \n    \"createdBy\": 101,  \n    \"updatedBy\": 102,  \n    \"createdTime\": \"2023-01-01T10:00:00Z\",  \n    \"updatedTime\": \"2023-01-02T10:00:00Z\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\"  \n    },  \n    {  \n    \"vendorId\": 222,  \n    \"vendorName\": \"Vendor DEF\",  \n    \"vendorDescription\": \"Description of Vendor DEF\",  \n    \"siteIds\": \\[\"SITE001\", \"SITE002\"\\],  \n    \"status\": \"IN_ACTIVE\",  \n    \"createdBy\": 103,  \n    \"updatedBy\": 104,  \n    \"createdTime\": \"2023-02-01T10:00:00Z\",  \n    \"updatedTime\": \"2023-02-02T10:00:00Z\",  \n    \"startTime\": \"2019-08-10T10:00:00Z\",  \n    \"endTime\": \"2020-08-10T10:00:00Z\"  \n    }  \n    \\],  \n    \"pageNo\": 1,  \n    \"pageSize\": 50,  \n    \"total\": 10  \n    }"
					},
					"response": [
						{
							"name": "Successfully retrieved a list of vendors.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/vendor?pageNo=1&pageSize=50",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"vendor"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"vendorId\": \"<long>\",\n      \"vendorName\": \"<string>\",\n      \"vendorDescription\": \"<string>\",\n      \"siteIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"IN_ACTIVE\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"startTime\": \"<dateTime>\",\n      \"endTime\": \"<dateTime>\"\n    },\n    {\n      \"vendorId\": \"<long>\",\n      \"vendorName\": \"<string>\",\n      \"vendorDescription\": \"<string>\",\n      \"siteIds\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"status\": \"IN_ACTIVE\",\n      \"createdBy\": \"<long>\",\n      \"updatedBy\": \"<long>\",\n      \"createdTime\": \"<dateTime>\",\n      \"updatedTime\": \"<dateTime>\",\n      \"startTime\": \"<dateTime>\",\n      \"endTime\": \"<dateTime>\"\n    }\n  ],\n  \"pageNo\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"total\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Delete Vendor By vendorId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vendor/{vendorId}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendor",
								"{vendorId}"
							]
						},
						"description": "The Host Of API is https://hix.com  \nEndPoint : /v1/vendor/{vendorId}\n\n**Description**: Deletes a specific vendor identified by their unique ID. This operation removes the vendor from the system.\n\n**Path Parameters**:**`vendorId`**\n\n**Responses**:\n\n- **200 OK**"
					},
					"response": [
						{
							"name": "Vendor successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://hix.com/v1/vendor/:vendorId",
									"protocol": "https",
									"host": [
										"hix",
										"com"
									],
									"path": [
										"v1",
										"vendor",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Vendor not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/vendor/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendor",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://hix.com/v1"
		}
	]
}